<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="String1" xml:space="preserve">
    <value>PROTOCOLE POUR L'ACHAT D'UN CHEVAL</value>
  </data>
  <data name="String10" xml:space="preserve">
    <value>Poulain passeport</value>
  </data>
  <data name="String11" xml:space="preserve">
    <value>Un poulain doit être en possession d'un passeport dans l'année suivant sa naissance.
Vous remplissez le formulaire d'identification que vous trouvez sous</value>
  </data>
  <data name="String12" xml:space="preserve">
    <value>et envoyez ce formulaire à notre secrétariat.
Le poulain sera inscrit dans la base de données et vous recevrez une facture de VCP pour 42,99 euros.
Après avoir payé cela, vous recevrez des croquis. Faites compléter ce croquis par votre vétérinaire et envoyez-en 1 exemplaire à notre secrétariat.
Le passeport peut alors être créé.</value>
  </data>
  <data name="String13" xml:space="preserve">
    <value>Achat d'un cheval aux Pays-Bas</value>
  </data>
  <data name="String14" xml:space="preserve">
    <value>Demandez toujours le passeport lors de l'achat du cheval.
Le cheval ne peut être transporté sans passeport!
Ensuite, vous envoyez le papier d'origine et le passeport original à notre secrétariat.
Le cheval sera alors enregistré à votre nom et inscrit dans la base de données belge.
Vous devez être membre de notre stud-book pour cela.</value>
  </data>
  <data name="String15" xml:space="preserve">
    <value>Achat d'un cheval en Belgique</value>
  </data>
  <data name="String16" xml:space="preserve">
    <value>Si le vendeur envoie le papier du stud-book à notre secrétariat et qu'il est membre de notre stud-book à ce moment-là, le vendeur paiera l'acompte de</value>
  </data>
  <data name="String17" xml:space="preserve">
    <value>reçu en retour.</value>
  </data>
  <data name="String18" xml:space="preserve">
    <value>Si le vendeur remet le papier du stud-book à l'acheteur, le vendeur ne recevra pas l'acompte.
Le vendeur doit remettre le passeport au nouveau propriétaire lorsqu'il vient chercher le cheval.
Le vendeur complètera le document de modification avec l'acheteur et l'enverra complété à VCP.
Le nouveau propriétaire envoie ensuite le papier d'origine du stud-book (s'il l'a reçu) à notre secrétariat SBCF afin que nous puissions l'enregistrer auprès du nouveau propriétaire.
Il envoie également l'original du passeport à notre secrétariat afin que nous puissions enregistrer le cheval au nom du nouveau propriétaire et tamponner le passeport.
Si le nouveau propriétaire n'a pas reçu le papier du stud-book, contactez le secrétariat afin que nous puissions signaler si ce papier est au bureau du stud-book.
Le nouveau propriétaire doit être membre de notre stud-book.</value>
  </data>
  <data name="String19" xml:space="preserve">
    <value>En cas de doute:</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>Poulain de naissance</value>
  </data>
  <data name="String20" xml:space="preserve">
    <value>Contactez-nous</value>
  </data>
  <data name="String21" xml:space="preserve">
    <value />
  </data>
  <data name="String3" xml:space="preserve">
    <value>La notification de naissance d'un poulain se fait numériquement via My KFPS.
Après avoir couvert une jument a été enregistrée, un formulaire de notification de naissance numérique est créé dans My KFPS sous la jument concernée, qui doit être rempli et envoyé (numériquement) après la naissance.
Après votre inscription, vous recevrez une confirmation par e-mail et la confirmation de naissance sera créée dans «Mon KFPS».
Cette confirmation de naissance peut être téléchargée via My KFPS et est le document qui est remis au secrétariat lors de l'inspection avec le numéro de puce collé dessus et la date et la signature du vétérinaire.</value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>Un poulain sert</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>sous 14 jours</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>à signaler au KFPS après la naissance.</value>
  </data>
  <data name="String7" xml:space="preserve">
    <value>Si l'on ne se rend pas à l'inspection avec le poulain, la confirmation de naissance avec le numéro de puce et la date et la signature du vétérinaire doivent être envoyées au secrétariat du BSFP pour recevoir le livre papier du poulain.</value>
  </data>
  <data name="String8" xml:space="preserve">
    <value>Le poulain doit être ébréché dans les 6 mois.</value>
  </data>
  <data name="String9" xml:space="preserve">
    <value>Naturellement, la mère du poulain doit être préalablement enregistrée au nom de l'éleveur.
Dans certains cas, une vérification du pedigree (via un test ADN) est nécessaire avant qu'un poulain puisse être enregistré. Par exemple, si l'accouplement n'a pas été déclaré ou signalé trop tard au KFPS, la date d'accouplement et la date de naissance ne correspondent pas, la naissance est déclarée trop tard au KFPS (plus de 14 jours), le poulain trop tard (plus plus de 7 mois) pour l'identification est offerte, etc.
En cas de problème ou si vous n'avez pas Internet, vous pouvez toujours contacter notre secrétariat BSFP.</value>
  </data>
</root>