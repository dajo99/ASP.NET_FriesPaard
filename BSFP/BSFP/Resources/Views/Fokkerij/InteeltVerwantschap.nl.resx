<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="String1" xml:space="preserve">
    <value>INTEELT EN VERWANTSCHAP</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>Inteelt</value>
  </data>
  <data name="String3" xml:space="preserve">
    <value>In een gesloten populatie als die van het KFPS speelt inteelt een belangrijke rol in het fokkerijbeleid. Feit is dat de inteelt binnen de populatie van Friese paarden in de afgelopen decennia te sterk is toegenomen. Er zijn twee hoofdredenen te benoemen waarom het controleerbaar maken van inteelt essentieel is. In eerste plaats betekent een sterke toename van inteelt dat de genetische variatie afneemt. Genetische variatie is de basis om genetische vooruitgang te boeken. Selecteren en het streven naar behoud van variatie zullen dus hand in hand moeten gaan. De tweede hoofdreden is het feit dat inteelt de oorzaak is van het voorkomen van erfelijke afwijkingen. Afwijkingen als waterhoofd en dwerggroei zijn rechtstreeks te herleiden naar inteelt. Daarnaast heeft inteelt een bewezen negatieve invloed op de zogenaamde fitnesskenmerken, zoals vruchtbaarheid, ziekteresistentie, etc. Er moet in het beleid onderscheid gemaakt worden tussen inteelt op het niveau van het individuele paard en inteelt op populatieniveau.</value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>Inteelt op paardniveau</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>Leden worden door het KFPS geadviseerd om bij het maken van paringen, nauwe inteelt te voorkomen. Als hulpmiddel wordt daarbij aangegeven, dat de inteeltcoëfficiënt van een combinatie niet groter zou moeten zijn dan 5%. Deze inteeltcoëfficiënt wordt berekend binnen 5 generaties. Feitelijk levert dit een onderschatting op van de werkelijkheid, berekend over meerdere generaties is het inteeltpercentage veel groter.</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>Inteelt op populatieniveau</value>
  </data>
  <data name="String7" xml:space="preserve">
    <value>Voor het beperken van de inteelttoename op populatieniveau worden door het KFPS een tweetal instrumenten gebruikt. In de eerste plaats worden dekbeperkingen voor hengsten toegepast, om de invloed van individuele hengsten te beperken. Daarnaast wordt het kengetal verwantschapspercentage benut bij de hengstenselectie. Het verwantschapspercentage geeft de mate van verwantschap aan met de populatie. Hengsten met een lage verwantschapspercentage zijn in het voordeel om goedgekeurd te worden. Het KFPS streeft een inteelttoename na in de populatie lager dan 1% per generatie.</value>
  </data>
</root>