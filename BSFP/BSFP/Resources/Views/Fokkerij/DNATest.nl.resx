<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="String1" xml:space="preserve">
    <value>DNA-TEST ONDERDEEL VAN HENGSTENSELECTIE</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>De DNA-merkertests om dragers van dwerggen en het waterhoofdgen binnen de populatie Friese paarden te identificeren zijn zo goed al klaar. De test zal al toegepast gaan worden voor de hengsten die einde dit jaar deel gaan nemen aan het Centraal onderzoek. Deze hengsten zullen direct na de Hengstenkeuring op dragerschap onderzocht gaan worden.
De komende maanden zal er gewerkt worden aan het routinematig kunnen uitvoeren van de tests, zodat deze ook beschikbaar kunnen komen voor fokkers. Voor fokkers  zal het interessant zijn om bijvoorbeeld fokmerries te laten testen.
Met het gereedkomen van deze merkertests is een belangrijke stap gezet in het verder uitbannen van aangeboren aandoeningen bij het Friese paard.</value>
  </data>
  <data name="String3" xml:space="preserve">
    <value>Het beleid van het KFPS ten aanzien van het gebruik van de DNA-tests zal gericht zijn op het snel, volledig uitsluiten van het geboren worden van dwerg- en waterhoofdveulens en het geleidelijk uitfaseren van dragers.
Met behulp van de DNA-tests zou het mogelijk zijn om de voor de afwijking verantwoordelijke (gemuteerde) genen in slechts één generatie uit de populatie te verwijderen, door alle dragers (mannelijk en vrouwelijk) uit te sluiten voor de fokkerij.
Dit is echter geen gewenste strategie, met name omdat een dergelijke verenging van de populatie zal leiden tot een toename van inteelt, in feite de veroorzaker van aangeboren aandoeningen. Het beleid zal daarom niet primair gebaseerd zijn op het uitsluiten van fokdieren, maar wel het voorkomen van risicoparingen. Uiteindelijk zal ook het aantal dragers in de populatie gaan afnemen.</value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>De merkertests zullen derhalve met name ingezet worden om zogenaamde risicoparingen uit te sluiten. Risicoparingen zijn paringen van hengsten en merries die beide drager zijn van een aandoening. In het geval van dwerggroei en waterhoofd, leidt een paring van twee dragers in een kwart van de gevallen tot een afwijkend veulen. Is alleen een van beide ouders drager, dan zal er nooit een waterhoofd- of dwergveulen geboren worden.</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>Het geleidelijk uitfaseren houdt in dat er met het testen van hengsten vanaf dit jaar wordt begonnen met de jonge kandidaat hengsten voor het Centraal onderzoek. In het geval een hengst drager is van een van beide genen, betekent dit niet dat een hengst niet zal worden goedgekeurd. Dragerschap zal, na goedkeuring, wel worden gepubliceerd. Reeds goedgekeurde hengsten zullen niet worden getest. De belangrijkste reden hiervoor is dat merkertesten een zekere foutmarge hebben.
Hoewel het de inschatting is dat de foutmarge voor beide tests uiterst gering is, is het testen van goedgekeurde hengsten niet aan de orde.</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>Het beleid van voorkomen van risicoparingen heeft er de afgelopen jaren al voor gezorgd dat het aantal waterhoofd- en dwergveulens fors gereduceerd is tot jaarlijks minder dan 10 gevallen. Goed overleg, ten aanzien van de hengstenkeuze, tussen fokker en hengstenhouder, met stamboomgegevens als uitgangspunt, vormt hiervoor de basis.
Met behulp van de DNA-tests zullen risicoparingen nog effectiever uitgesloten kunnen worden.</value>
  </data>
  <data name="String7" xml:space="preserve">
    <value>Fokkerij met behulp van DNA-tests (genomics) zal de komende decennia een grote rol gaan spelen in de selectie met name voor met kenmerken die gerelateerd zijn aan gezondheid. Momenteel wordt veel genomics-onderzoek gedaan, hetgeen moet gaan leiden tot DNA-test  voor meerdere aandoeningen van (Friese) paarden, zoals Osteochondrose, Staart- en maaneczeem, slokdarmverwijding, aortaruptuur, etc.</value>
  </data>
  <data name="String8" xml:space="preserve">
    <value>Het komende jaar zal het KFPS op verschillende manieren informeren over het beschikbaar komen van de tests en hoe deze kunnen worden toegepast.</value>
  </data>
  <data name="String9" xml:space="preserve">
    <value>Bron :</value>
  </data>
</root>