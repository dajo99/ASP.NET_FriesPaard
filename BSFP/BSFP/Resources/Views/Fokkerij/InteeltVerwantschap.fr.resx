<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="String1" xml:space="preserve">
    <value>CONSIGNES ET RELATIONS</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>Consanguin</value>
  </data>
  <data name="String3" xml:space="preserve">
    <value>Dans une population fermée comme celle du KFPS, la consanguinité joue un rôle important dans la politique d'élevage. Le fait est que la consanguinité au sein de la population de chevaux frisons a trop augmenté ces dernières décennies. Il y a deux raisons principales pour lesquelles il est essentiel de rendre la consanguinité contrôlable. Premièrement, une forte augmentation de la consanguinité signifie que la variation génétique diminue. La variation génétique est la base du progrès génétique. Sélection et recherche de variation doivent donc aller de pair. La deuxième raison principale est le fait que la consanguinité est la cause de l'apparition de défauts héréditaires. Des anomalies telles que l'hydrocéphalie et le nanisme peuvent être attribuées directement à la consanguinité. En outre, la consanguinité a une influence négative avérée sur les caractéristiques dites de forme physique, telles que la fertilité, la résistance aux maladies, etc.</value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>La consanguinité au niveau du cheval</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>Le KFPS conseille aux membres d'éviter la consanguinité étroite lors des accouplements. A titre d'aide, il est indiqué que le coefficient de consanguinité d'un croisement ne doit pas être supérieur à 5%. Ce coefficient de consanguinité est calculé sur 5 générations. En fait, cela se traduit par une sous-estimation de la réalité, calculée sur plusieurs générations, le pourcentage de consanguinité est beaucoup plus élevé.</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>Consanguinité au niveau de la population</value>
  </data>
  <data name="String7" xml:space="preserve">
    <value>Le KFPS utilise deux instruments pour limiter l'augmentation de la consanguinité au niveau de la population. En premier lieu, des restrictions de haras pour les étalons sont appliquées pour limiter l'influence des étalons individuels. De plus, le pourcentage de parenté par rapport est utilisé dans la sélection des étalons. Le pourcentage de parenté indique le degré de parenté avec la population. Les étalons avec un faible pourcentage de parenté ont un avantage à être approuvés. Le KFPS vise une augmentation de la consanguinité de la population de moins de 1% par génération.</value>
  </data>
</root>