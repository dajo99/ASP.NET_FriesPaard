<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Tekst1" xml:space="preserve">
    <value>Het Friese paard is het enige inlandse paardenras van Nederland, reeds in de 13e eeuw was het Friese type bekend. Door een consequent fokbeleid
                    vertoont het Friese paard zoals we dat nu kennen, nog steeds de specifieke raseigenschappen en daardoor overeenkomsten met zijn verre voorouders.
                    Kenmerkend voor de zwarte parels zijn het front, royale behang, zwarte kleur en ruime, krachtige, verheven gangen. De harmonieuze bouw en het edele hoofd,
                    geplaatst op een lichtgebogen hals, volmaken de luxe en fiere verschijning. Het vriendelijke karakter is de sleutel tot een fijn gebruikspaard.</value>
  </data>
  <data name="Tekst2" xml:space="preserve">
    <value>Halverwege vorige eeuw werd het Friese paard voornamelijk gebruikt als trekpaard op de boerenbedrijven. Tegenwoordig worden ze gehouden voor recreatie,
                    fokkerij en sport, vaak ook in combinatie met elkaar. Voornamelijk de dressuursport is zeer populair maar ook zeker in de men- en tuigsport is het Friese
                    paard te vinden. Tussen gebruiksdoel en exterieur bestaat een nauw verband.</value>
  </data>
  <data name="Tekst3" xml:space="preserve">
    <value>Het paard dat werd gebruikt voor de landbouw was kortbeniger en compacter, met een onderstandig voorbeen en een brede borst. Met deze brede borst
                    kon het paard zich beter 'in het tuig' werpen en zo meer trekkracht ontwikkelen. Deze exterieurkenmerken zijn tegenwoordig minder functioneel voor
                    het rij-, tuig- of menpaard. Het zwaardere en kortbenige type komt nog wel voor omdat dit type jarenlang zo gefokt is en het meerdere generaties vergt
                    voordat dit uit het ras verdwijnt. Voor het rijden onder het zadel en voor de aangespannen sport is een functionele bouw heel belangrijk. Het paard
                    dient een opwaartse romprichting te hebben. Door deze opwaartse bouw komt de gewichtsverdeling in beweging meer op de achterhand, waardoor het paard
                    beter in staat is om te dragen met zijn achterhand. Voor een opwaartse bouw is een lang voorbeen van belang, maar ook de stand van het voorbeen. De
                    stand van het voorbeen is gekoppeld aan de schouder, waarbij een schuine en lange schouder het paard de ruimte geeft het voorbeen ver weg te zetten.</value>
  </data>
  <data name="Tekst4" xml:space="preserve">
    <value>Het tuigpaard heeft vaak een iets meer verticale halsrichting dan het rij- en menpaard. Voor alle types geldt dat het paard soepel door het hele lichaam
                    moet bewegen, met een beweging die door een krachtige achterhand naar voren wordt overgebracht zodat het paard van voren kan rijzen, iets wat belangrijk
                    is voor zowel het rijden onder het zadel als het rijden voor de wagen. Voor een tuigpaard is veel knieactie gewenst (maar niet alleen, het moet gecombineerd
                    worden met veel ruimte en een dragende achterhand), terwijl voor een rijpaard en ook een menpaard, veel knieactie niet altijd gewaardeerd wordt.
                    Voor alle doeleinden zijn correcte beenstanden een 'must'.</value>
  </data>
  <data name="Tekst5" xml:space="preserve">
    <value>Het Friese paard heeft zich de laatste decennia steeds meer als sportpaard ontwikkeld, waarbij het in wezen weer terugkomt bij het type van vóór de
                    landbouwperiode toen de Fries een luxe en snittig koetspaard was. Door de eigen functionele eigenschappen van het ras kan het zich tegenwoordig tot
                    op het hoogste niveau meten met andere rassen. En natuurlijk heeft de Fries, door haar kenmerkende raseigenschappen, net even meer uitstraling!</value>
  </data>
  <data name="Titel1" xml:space="preserve">
    <value>Het Friese paard</value>
  </data>
  <data name="Titel2" xml:space="preserve">
    <value>Veelzijdig gebruikspaard</value>
  </data>
  <data name="Titel3" xml:space="preserve">
    <value>Functionele bouw</value>
  </data>
  <data name="Titel4" xml:space="preserve">
    <value>Het Friese sportpaard</value>
  </data>
</root>