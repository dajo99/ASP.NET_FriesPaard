<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Lijst1" xml:space="preserve">
    <value>Het lidmaatschap BSFP.</value>
  </data>
  <data name="Lijst10" xml:space="preserve">
    <value>Korting toegangskaarten Hengstenkeuring KFPS.</value>
  </data>
  <data name="Lijst11" xml:space="preserve">
    <value>Zo behoor je tot de groep van alle Belgische Friezenliefhebbers. En kan je dus mensen ontmoeten die
dezelfde passie delen.</value>
  </data>
  <data name="Lijst12" xml:space="preserve">
    <value>Verder ben je welkom op onze infoavonden die we een 5 tal keer per jaar organiseren. Elke keer wordt er een leerrijk of informatief thema voorgesteld.</value>
  </data>
  <data name="Lijst13" xml:space="preserve">
    <value>Ook maken we met de vereniging uitstapjes die Fries paard gerelateerd zijn.</value>
  </data>
  <data name="Lijst2" xml:space="preserve">
    <value>Lid van de Belgische Fokvereniging.</value>
  </data>
  <data name="Lijst3" xml:space="preserve">
    <value>Het lidmaatschap KFPS (Nederland).</value>
  </data>
  <data name="Lijst4" xml:space="preserve">
    <value>Het 3 maandelijks ledenblad BSFP.</value>
  </data>
  <data name="Lijst5" xml:space="preserve">
    <value>Deelname aan de Belgisch Keuringen.</value>
  </data>
  <data name="Lijst6" xml:space="preserve">
    <value>Hulp bij het registreren en identificatie van uw Friese paard.</value>
  </data>
  <data name="Lijst7" xml:space="preserve">
    <value>Deelnemen aan dressuurwedstrijden BSFP.</value>
  </data>
  <data name="Lijst8" xml:space="preserve">
    <value>Toegang tot MIJN KFPS met o.a. paardgegevens en hengsteninformatie. (= via de KFPS website www.kfps.nl)</value>
  </data>
  <data name="Lijst9" xml:space="preserve">
    <value>10% korting op artikelen KFPS webshop.</value>
  </data>
  <data name="Tekst1" xml:space="preserve">
    <value>Heb je een Fries paard en wil je lid worden van het BSFP, dan kost dit 70 EUR lidgeld en 15 EUR instapgeld.
Het maandblad Phryso kost 65 EUR (= Uitsluitend voor BSFP leden en via het BSFP)</value>
  </data>
  <data name="Tekst2" xml:space="preserve">
    <value>Van harte welkom !</value>
  </data>
  <data name="Tekst3" xml:space="preserve">
    <value>Om je paard correct in te schrijven moet je lid zijn van het BSFP.
Via het secretariaat worden alle papieren in orde gemaakt en krijg je alle info die je nodig hebt.</value>
  </data>
  <data name="Tekst4" xml:space="preserve">
    <value>Als lid geniet je natuurlijk van nog andere voordelen.</value>
  </data>
  <data name="Tekst5" xml:space="preserve">
    <value>In dit bedrag is inbegrepen:</value>
  </data>
  <data name="Tekst6" xml:space="preserve">
    <value>Lid worden kan door dit te melden aan het secretariaat:</value>
  </data>
  <data name="Tekst7" xml:space="preserve">
    <value>Ga naar </value>
  </data>
  <data name="Tekst8" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="Titel" xml:space="preserve">
    <value>Lid Worden</value>
  </data>
  <data name="Titel1" xml:space="preserve">
    <value>Lid worden van het BSFP</value>
  </data>
</root>