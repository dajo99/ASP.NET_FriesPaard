<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="String1" xml:space="preserve">
    <value>VERZEKERINGEN</value>
  </data>
  <data name="String10" xml:space="preserve">
    <value>snelheidswedstrijden, hindernis-rijden en rijden tegen vergoeding</value>
  </data>
  <data name="String11" xml:space="preserve">
    <value>ongevallen veroorzaakt door opzet, onder invloed, bij wandaden</value>
  </data>
  <data name="String12" xml:space="preserve">
    <value>ongevallen veroorzaakt door ziekte of ziekelijke toestanden</value>
  </data>
  <data name="String13" xml:space="preserve">
    <value>Wat is een ongeval zoals vermeld in de polis?</value>
  </data>
  <data name="String14" xml:space="preserve">
    <value>" Als ongeval wordt uitsluitend aangezien iedere plotselinge en abnormale gebeurtenis die veroorzaakt wordt door een van buiten komende kracht en die een lichamelijke kwetsuur tot rechtstreeks gevolg heeft"</value>
  </data>
  <data name="String15" xml:space="preserve">
    <value>Welke bedragen zijn voorzien?</value>
  </data>
  <data name="String16" xml:space="preserve">
    <value>bij overlijden</value>
  </data>
  <data name="String17" xml:space="preserve">
    <value>blijvende invaliditeit</value>
  </data>
  <data name="String18" xml:space="preserve">
    <value>verpleegkosten</value>
  </data>
  <data name="String19" xml:space="preserve">
    <value>Engelse vrijstelling </value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>Het Belgisch Stamboek v/h Friese Paard is verzekerd bij :</value>
  </data>
  <data name="String20" xml:space="preserve">
    <value>Voor schadegevallen onder de 39 euro =&gt; geen uitbetaling door de verzekering.</value>
  </data>
  <data name="String21" xml:space="preserve">
    <value>Voor schadegevallen van 40 euro en meer =&gt; betaalt de verzekering uit vanaf de eerste euro .</value>
  </data>
  <data name="String21.1" xml:space="preserve">
    <value>Voorbeeld</value>
  </data>
  <data name="String22" xml:space="preserve">
    <value>Schadegeval van 35 euro =&gt; er wordt er door de verzekering niks uitbetaald.</value>
  </data>
  <data name="String23" xml:space="preserve">
    <value>Schadegeval van 50 euro =&gt; betaalt de verzekering 50 euro uit.</value>
  </data>
  <data name="String24" xml:space="preserve">
    <value>Wie kan zich laten verzekeren?</value>
  </data>
  <data name="String25" xml:space="preserve">
    <value>Iedereen die met het paardrijden te maken heeft, jezelf, je echtgenote, je kinderen of ieder ander persoon die paardrijdt of hieraan meehelpt met klaarmaken, optuigen, enz.</value>
  </data>
  <data name="String26" xml:space="preserve">
    <value>Dit aan € 15 per persoon. Dit bedrag is geldig tot einde van het jaar.</value>
  </data>
  <data name="String27" xml:space="preserve">
    <value>Je kunt in de loop van het jaar altijd iemand bijkomende laten verzekeren maar het blijft wel € 15 premie tot einde van het jaar.</value>
  </data>
  <data name="String28" xml:space="preserve">
    <value>Hoe beginnen met de verzekering ?</value>
  </data>
  <data name="String29" xml:space="preserve">
    <value>Neem</value>
  </data>
  <data name="String3" xml:space="preserve">
    <value>BA en rechtsbijstand.</value>
  </data>
  <data name="String30" xml:space="preserve">
    <value>contact</value>
  </data>
  <data name="String31" xml:space="preserve">
    <value>met ons op!</value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>Polis</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>Maatschappij</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>Groepsverzekering voor de leden van het BSFP – ongevallenverzekering</value>
  </data>
  <data name="String7" xml:space="preserve">
    <value>BA bedrijfsleiders van vennootschappen</value>
  </data>
  <data name="String8" xml:space="preserve">
    <value>Aansluiten bij onze BSFP groepsverzekering voor ongevallen?</value>
  </data>
  <data name="String9" xml:space="preserve">
    <value>Het betreft hier een polis verzekering persoonlijke ongevallen voor het paardrijden in de vrije tijd in zijn algemene betekenis.
Dit zowel aan de hand, onder het zadel als aangespannen paardrijden.
</value>
  </data>
  <data name="String9.1" xml:space="preserve">
    <value>Zijn echter uitgesloten :</value>
  </data>
</root>